To declare a pointer to a 3-dimensional array of floats in C, you can use the following syntax:

```c
float (*ptr)[size2][size3];
```

Here, `ptr` is a pointer to a 3-dimensional array of floats. `size2` and `size3` represent the sizes of the second and third dimensions of the array, respectively.

To allocate memory for the 3-dimensional array and assign it to the pointer, you can use the `malloc` function:

```c
ptr = malloc(size1 * sizeof(float[size2][size3]));
```

Here, `size1` represents the size of the first dimension of the array.

Remember to free the allocated memory when you are done using it:

```c
free(ptr);
```

Note that when accessing elements of the array through the pointer, you need to use the appropriate indexing for each dimension:

```c
ptr[i][j][k] = value;
```

Where `i`, `j`, and `k` represent the indices for the first, second, and third dimensions, respectively.
